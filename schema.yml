openapi: 3.0.3
info:
  title: vscubing Api
  version: 1.0.0
  description: vscubing is a contest platform for speedcubers to compete in virtual
    speedcubing
paths:
  /api/accounts_app/change_username/:
    put:
      operationId: accounts_app_change_username_update
      tags:
      - accounts_app
      security:
      - jwtHeaderAuth: []
      - jwtCookieAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /api/accounts_app/current_user/:
    get:
      operationId: accounts_app_current_user_retrieve
      tags:
      - accounts_app
      security:
      - jwtHeaderAuth: []
      - jwtCookieAuth: []
      responses:
        '200':
          description: No response body
  /api/accounts_app/google/login/:
    post:
      operationId: accounts_app_google_login_create
      description: |-
        class used for social authentications
        example usage for facebook with access_token
        -------------
        from allauth.socialaccount.providers.facebook.views import FacebookOAuth2Adapter

        class FacebookLogin(SocialLoginView):
            adapter_class = FacebookOAuth2Adapter
        -------------

        example usage for facebook with code

        -------------
        from allauth.socialaccount.providers.facebook.views import FacebookOAuth2Adapter
        from allauth.socialaccount.providers.oauth2.client import OAuth2Client

        class FacebookLogin(SocialLoginView):
            adapter_class = FacebookOAuth2Adapter
            client_class = OAuth2Client
            callback_url = 'localhost:8000'
        -------------
      tags:
      - accounts_app
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SocialLogin'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SocialLogin'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SocialLogin'
      security:
      - jwtHeaderAuth: []
      - jwtCookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SocialLogin'
          description: ''
  /api/accounts_app/token/refresh/:
    post:
      operationId: accounts_app_token_refresh_create
      description: |-
        Takes a refresh type JSON web token and returns an access type JSON web
        token if the refresh token is valid.
      tags:
      - accounts_app
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenRefresh'
          description: ''
  /api/contests_app/solves/:
    get:
      operationId: contests_app_solves_retrieve
      tags:
      - contests_app
      security:
      - jwtHeaderAuth: []
      - jwtCookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Output'
          description: ''
components:
  schemas:
    Output:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        time_ms:
          type: integer
          nullable: true
        dnf:
          type: boolean
        extra_id:
          type: integer
          nullable: true
        state:
          type: string
          maxLength: 96
        reconstruction:
          type: string
          nullable: true
          maxLength: 15048
        created:
          type: string
          format: date-time
          readOnly: true
        scramble:
          type: integer
        user:
          type: integer
        discipline:
          type: integer
        round_session:
          type: integer
        contest:
          type: integer
      required:
      - contest
      - created
      - discipline
      - id
      - round_session
      - scramble
      - user
    SocialLogin:
      type: object
      properties:
        access_token:
          type: string
        code:
          type: string
        id_token:
          type: string
    TokenRefresh:
      type: object
      properties:
        access:
          type: string
          readOnly: true
        refresh:
          type: string
          writeOnly: true
      required:
      - access
      - refresh
  securitySchemes:
    jwtCookieAuth:
      type: apiKey
      in: cookie
      name: jwt-auth
    jwtHeaderAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
